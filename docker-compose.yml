services:
  postgres:
    image: postgres:16-alpine
    restart: always
    container_name: shadcn-admin-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./backend/db/seed.sql:/docker-entrypoint-initdb.d/2-seed.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    container_name: shadcn-admin-backend
    environment:
      PGUSER: ${POSTGRES_USER}
      PGHOST: postgres
      PGDATABASE: ${POSTGRES_DB}
      PGPASSWORD: "${POSTGRES_PASSWORD}"
      PGPORT: 5432
      PORT: 3001
      JWT_SECRET: "${JWT_SECRET}"
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app/backend
      - /app/backend/node_modules
    networks:
      - app-network

  frontend:
    build:
      context: ./
      dockerfile: Dockerfile
    command: pnpm dev
    restart: always
    container_name: shadcn-admin-frontend
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://backend:3001
    depends_on:
      - backend
    volumes:
      - ./src:/app/src
      - ./public:/app/public
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
